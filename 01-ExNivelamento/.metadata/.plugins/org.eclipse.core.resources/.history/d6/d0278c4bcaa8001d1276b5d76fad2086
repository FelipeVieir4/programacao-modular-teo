public class Validator {

	public static boolean date(String str) throws Exception {

		try {
			String[] date = str.split("/");
			//System.out.println("Split");
			if (date.length != 3 || date[0] == null || date[0] == "" || date[1] == null || date[1] == ""
					|| date[2] == null || date[2] == "") {
				throw new Exception("DATA INVÁLIDA! A data não está no formato indicado");
			} else {
				//System.out.println("distribuiu");
				int day = Integer.parseInt(date[0]);
				int month = Integer.parseInt(date[1]);
				int year = Integer.parseInt(date[2]);

				if (isYearValid(year) & isMonthValid(month)) {
					isDayValid(day, month, year);
					return true;
				}
			}

		} catch (Exception e) {
			throw new Exception(e.getMessage());
		}
	}

	public static boolean isYearValid(int year) throws Exception {
		try {
			if (year > 0 & year < 9999) {
				//System.out.println("Validou o ano");
				return true;
			} else {
				throw new Exception("Ano inválido");
			}

		} catch (Exception e) {
			throw new Exception(e.getMessage());
		}
	}

	public static boolean isMonthValid(int month) throws Exception {
		try {
			if (month > 0 & month < 13) {
				//System.out.println("Validou o mês");
				return true;
			} else {
				throw new Exception("Mês inválido");
			}

		} catch (Exception e) {
			throw new Exception(e.getMessage());
		}
	}

	public static boolean isDayValid(int day, int month, int year) throws Exception {

		int[] vw31 = { 1, 3, 5, 7, 8, 10, 12 };
		int[] vw30 = { 4, 6, 9, 11 };
		int[] vl30 = { 2 };
		Vector monthWith31 = new Vector(vw31);
		Vector monthWith30 = new Vector(vw30);
		Vector monthLess30 = new Vector(vl30);

		try {
			if (day > 0 & day <= 31) {
				if (monthWith31.contains(month)) {
					//System.out.println("validou se o dia pertence ao mes de 31");
					return true;
				} else if (monthWith30.contains(month) & day < 31) {
					//System.out.println("validou se o dia pertence ao mes de 30");
					return true;
				} else if (monthLess30.contains(month) & day <= 29) {
					//System.out.println("validou se o dia pertence a fevereiro");
					if (day == 29 & !isLeapYear(year)) {
						
						throw new Exception("Dia inválido, " + year + " não é ano bissexto");
					}else {
						return true;
					}
				} else {
					throw new Exception("Dia inválido");
				}
			} else {
				throw new Exception("Dia inválido");
			}

		} catch (Exception e) {
			throw new Exception(e.getMessage());
		}
	}
	
	public static boolean isLeapYear(int year) throws Exception {
		
		if(year%4 == 0 ) {
			if(year%100!=0) {
				System.out.println("é ano bissexto");
				return true;
				}else if(year%400==0){
					System.out.println("é ano bissexto");
					return true;
			}
		}
		System.out.println("Não é ano bissexto");
		return false;
	}
	
}
