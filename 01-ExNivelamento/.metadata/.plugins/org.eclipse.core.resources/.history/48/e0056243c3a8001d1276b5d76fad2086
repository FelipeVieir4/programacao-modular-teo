public class Validator {
	
	System.out.println("entrou no validador");
	
	int[] vw31 = { 1, 3, 5, 7, 8, 10, 12 };
	int[] vw30 = { 4, 6, 9, 11 };
	int[] vl30 = { 2 };

	Vector monthWith30 = new Vector();
	Vector monthWith31 = new Vector(vw31);
	Vector monthLess30 = new Vector(vl30);
	
	
	
	public static boolean date(String str) throws Exception {

		try {
			String[] date = str.split("/");
			System.out.println("Split");
			if (date.length != 3 || date[0] == null || date[0] == "" || date[1] == null || date[1] == ""
					|| date[2] == null || date[2] == "") {
				throw new Exception("DATA INVÁLIDA! A data não está no formato indicado");
			} else {
				System.out.println("distribuiu");
				int day = Integer.parseInt(date[0]);
				int month = Integer.parseInt(date[1]);
				int year = Integer.parseInt(date[2]);

				if (isYearValid(year) & isMonthValid(month)) {
					isDayValid(day, month, year);
					return true;
				}else {
					return false;
				}
			}	
			
		} catch (Exception e) {
			throw new Exception(e.getMessage());
		}
	}

	public static boolean isYearValid(int year) throws Exception {
		try {
			if (year > 0 & year < 9999) {
				System.out.println("Validou o ano");
				return true;
			} else {
				throw new Exception("Ano inválido");
			}

		} catch (Exception e) {
			throw new Exception(e.getMessage());
		}
	}

	public static boolean isMonthValid(int month) throws Exception {
		try {
			if (month > 0 & month < 13) {
				System.out.println("Validou o mês");
				return true;
			} else {
				throw new Exception("Mês inválido");
			}

		} catch (Exception e) {
			throw new Exception(e.getMessage());
		}
	}

	public static boolean isDayValid(int day, int month, int year) throws Exception {
		// verificar se o mês é de 31,
		// verificar se o mês é de 30,
		// verificar se é fevereiro,
		// verificar se é bissexto,
		try {
			if (true) {
				System.out.println("validou o dia");
				return true;
			}
		} catch (Exception e) {
			System.out.println(e.getMessage());
		}
		return false;
	}
}
